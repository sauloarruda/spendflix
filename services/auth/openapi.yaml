openapi: 3.1.0
info:
  title: Spendflix Auth Service
  version: 1.0.0

paths:
  /auth/signup:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              required: [name, email]
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  onboardingUid:
                    type: string
                required: [onboardingUid]
        '400':
          description: Request validation failed.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RequestError'
        '500':
          description: Failed to create user.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RequestError'

  /auth/confirm:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                code:
                  type: string
                onboardingUid:
                  type: string
              required: [code, email, onboardingUid]
      responses:
        '200':
          description: User confirmed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  refreshToken:
                    type: string
                    example: dXNlcjEyMzQ1Njc4OTA=
                  idToken:
                    type: string
                    example: eyJraWQiOiJrZXkxMjM0NTY3ODkwIiwidHlwIjoiSldUIn0...
                  expiresIn:
                    type: integer
                    example: 3600
                required: [accessToken, refreshToken, idToken, expiresIn]
        '400':
          description: Failed to confirm user.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RequestError'
        '500':
          description: Failed to update onboarding data.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RequestError'

  /onboarding/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found for email.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/OnboardingData'
        '404':
          description: Onboarding not found for email.
        '500':
          description: Failed to get onboarding data.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RequestError'
    put:
      summary: Update onboarding data preserving previous existent information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/OnboardingData'
      responses:
        '204':
          description: Onboarding data updated successfully.
        '400':
          description: Invalid data to update onboarding data.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RequestError'
        '500':
          description: Failed to update onboarding data.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RequestError'

components:
  schemas:
    RequestError:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
    OnboardingData:
      type: object
      properties:
        startedAt:
          type: string
          format: date-time
        step:
          type: integer
        name:
          type: string
        goal:
          type: string
          enum: [dream, debt]
        goalDescription:
          type: string
        goalValue:
          type: number
        banks:
          type: array
          items:
            type: string
        waitlist:
          type: boolean
        finishedAt:
          type: string
          format: date-time
