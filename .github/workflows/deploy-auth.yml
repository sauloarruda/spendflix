name: Spendflix CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - 'services/auth/**'

permissions:
  pull-requests: write
  contents: read

jobs:
  build-test-danger-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Install dependencies
        run: |
          pnpm install
          cd services/auth
          pnpm install
          pnpm prisma:generate

      - name: Run Tests
        run: |
          cd services/auth
          pnpm prisma:migrate
          pnpm test
        env:
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/postgres?schema=public'
          LOG_LEVEL: fatal
          ENCRYPTION_SECRET: ${{ secrets.ENCRYPTION_SECRET }}

      - name: Run Danger
        if: github.event_name != 'push'
        run: npx danger ci --dangerfile=Dangerfile.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}

      - name: Configure AWS credentials
        if: github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Deploy Auth Service
        if: github.event_name == 'push'
        run: |
          cd services/auth
          pnpm install
          pnpm sls deploy --stage=v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID }}
          COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
          ENCRYPTION_SECRET: ${{ secrets.ENCRYPTION_SECRET }}
          BASE_APP_URL: ${{ secrets.BASE_APP_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          LOG_LEVEL: debug
